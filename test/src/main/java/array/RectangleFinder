

public class RectangleFinder {

	public static class Point {
		int x, y;
		public Point (int x, int y) {
			this.x = x;
			this.y = y;
		}

		@Override
		public boolean equals(Object o) {
			if(o instanceof Point) {
				Point other = (Point) o;
				return x == other.x && y == other.y;
			}
			return false;
		}

		@Override
		public int hashCode() {
			return 31 * x + 97 * y;
		}

		@override
		public String toString() {
			return String.format("(%d, %d)", x, y);
		}

	}

	public static Set<List<Point>> findRectangles(int [][] arr) {
		//npe checks
		Set<List<Point>> allRect = new HashSet<>();
		Set<Point> visited = new HashSet<>();
		Point current = new Point(0,0);
		Point end = new Point(arr.length-1, arr[arr.length-1].length);
		findAllRect(arr, current, end, allRect, visited);
		return allRect;
	}

	public static Point findAllRect(int [][] arr, Point current, Point end, 
									Set<List<Point>> allRect, Set<Point> visited) {
		if() {
		}
	}


}
